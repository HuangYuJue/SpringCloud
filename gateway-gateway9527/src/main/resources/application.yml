server:
  port: 9527

spring:
  application:
    name: cloud-gateway

  ### 方法一：在配置文件yml中配置gateway网关路由
  cloud:
    gateway:  #代表9527网关挡在8001前面
      # 开启从注册中心动态创建路由的功能，利用微服务名进行路由
      discovery:
        locator:
          enabled: true
      routes: #多个路由route的复数，以下有两个路由。访问地址：uri+predicates，要管理几个路由就写几部分。
        - id: payment_routh1 #payment_route  #路由的ID，没有固定规则但要求唯一，建议配合服务名
          # 写死，非动态
          #uri: http://localhost:8001  #匹配后提供服务的路由地址
          # 不写死，动态。需要注意的是uri的协议为lb，表示启用Gateway的负载均衡功能
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/get/**  #断言，路径相匹配的进行路由，对于@GetMapping中地址
            ##表示在这个时间之后访问：- Path=/payment/get/** 才有效果，可随意设置时间
            ##还有Before、Between，其中Between的两个时间点用逗号(,)隔开即可
            - After=2022-10-26T16:21:25.390+08:00[Asia/Shanghai]
            ##写了cookies对应key和value时，在cmd中用：curl http://localhost:9527/payment/lb
            ##表示只发了一个get请求，没有带cookie，则返回404，不允许匹配；而在cmd中输入：
            ##curl http://localhost:9527/payment/lb --cookie "username=zzyy"
            ##表示只发了一个get请求，带cookie，则轮询负载均衡地返回端口号：8001、8002、8001、8002...并返回查询到信息
            - Cookie=username,zzyy
            ##请求体要有X-Request-Id属性并且值为整数的正则表达式，不能带负数等，
            ##curl http://localhost:9527/payment/lb -H "X-Request-Id:123"轮询返回端口号8001、8002、8001、8002...
            - Header=X-Request-Id,\d+
            - Method=GET
            ##要有参数名username并且值还有是整数才能路由
            - Query=username,\d+

        - id: payment_routh2
          # 写死，非动态
          #uri: http://localhost:8001  #匹配后提供服务的路由地址
          # 不写死，动态。需要注意的是uri的协议为lb，表示启用Gateway的负载均衡功能
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
          #自定义Filter，过滤器工厂会在匹配的请求头上加一对请求头，名称为X-Request-Id值为1024
          filters:
            - AddRequestParameter=X-Request-Id,1024
          predicates:
            - Path=/payment/lb/**  #断言，路径相匹配的进行路由，对于@GetMapping中地址
            ##表示在这个时间之后访问：- Path=/payment/lb/** 才有效果，可随意设置时间
            ##还有Before、Between，其中Between的两个时间点用逗号(,)隔开即可
            #- After=2022-10-26T16:30:25.390+08:00[Asia/Shanghai]
            ##写了cookies对应key和value时，在cmd中用：curl http://localhost:9527/payment/get/1
            ##表示只发了一个get请求，没有带cookie，则返回404，不允许匹配；而在cmd中输入：
            ##curl http://localhost:9527/payment/get/1 --cookie "username=zzyy"
            ##表示只发了一个get请求，带cookie，则轮询负载均衡地返回端口号：8001、8002、8001、8002...并返回查询到信息
            #- Cookie=username,zzyy
            ##请求体要有X-Request-Id属性并且值为整数的正则表达式，不能带负数等，
            ##curl http://localhost:9527/payment/lb -H "X-Request-Id:123"轮询返回端口号8001、8002、8001、8002...
            #- Header=X-Request-Id,\d+
            - Method=GET,POST
            ##要有参数名username并且值还有是整数才能路由
            #- Query=username,\d+

eureka:
  instance:
    hostname: cloud-gateway-service
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka